name: CI

# Trigger on pull_request or on push to master
on:
  create:
    tags:
  push:
    branches:
      - master
  pull_request:

jobs:

  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - uses: actions/checkout@v1
      with:
        submodules: true
    - name: install tools
      run: |
        sudo pip3 install flake8==3.7.8
        sudo apt-get install clang-format clang-tidy
        echo "::add-path::/usr/lib/llvm-8/bin"
    - name: flake8
      run: flake8
    - run: ./scripts/clang-format-diff.sh
    - run: ./scripts/clang-tidy-diff.sh

  build-gcc:
    name: gcc
    runs-on: ubuntu-latest
    steps:
    - uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - uses: actions/checkout@v1
      with:
        submodules: true
    - name: install ninja
      run: sudo apt-get install ninja-build
    - name: cmake
      run: |
        mkdir -p out
        cmake -S . -B out -G Ninja -DCMAKE_C_COMPILER=gcc-7 -DCMAKE_CXX_COMPILER=g++-7
    - name: build
      run: cmake --build out
    - name: test
      run: python check.py --binaryen-bin=out/bin
    - name: archive
      run: |
        export PKGNAME="binaryen-$GITHUB_SHA-linux"
        export TARBALL=$PKGNAME.tar.gz
        mv out/bin binaryen-$GITHUB_SHA
        tar -czf $TARBALL binaryen-$GITHUB_SHA
        shasum -a 256 $TARBALL > $PKGNAME.tar.gz.sha256
        echo "::set-env name=ASSET_PATH::$TARBALL"
    - name: create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: true
        prerelease: true
    - name: upload release asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        # This pulls from the CREATE RELEASE step above, referencing it's ID to
        # get its outputs object, which include a `upload_url`. See this blog
        # post for more info:
        # https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./my-artifact.zip
        asset_name: my-artifact.zip
        asset_content_type: application/zip
